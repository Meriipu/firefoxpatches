From 7885a80370e1735b76b29203f46382f356d717a2 Mon Sep 17 00:00:00 2001
From: Meriipu <Meriipu@users.noreply.github.com>
Date: Fri, 17 Dec 2021 13:13:56 +0100
Subject: [PATCH 01/10] restore click-selection behaviour to urlbar and
 searchbar

* doubleclicking selects all
* singleclicking selects nothing
---
 browser/components/search/content/searchbar.js | 10 +++++++++-
 browser/components/urlbar/UrlbarInput.jsm      | 15 ++++++++++-----
 2 files changed, 19 insertions(+), 6 deletions(-)

diff --git a/browser/components/search/content/searchbar.js b/browser/components/search/content/searchbar.js
index 54c2e97443a8..71309a29fee4 100644
--- a/browser/components/search/content/searchbar.js
+++ b/browser/components/search/content/searchbar.js
@@ -455,7 +455,8 @@
         document.activeElement == this._textbox &&
         this._textbox.selectionStart == this._textbox.selectionEnd
       ) {
-        this.select();
+        //this.select();
+        this._textbox.editor.selectsAll();
       }
     }
 
@@ -560,6 +561,13 @@
           // is text in the textbox.
           this.openSuggestionsPanel(true);
         }
+
+        // select everything (doubleclick)
+        if (event.detail == 2)
+        {
+          this._textbox.editor.selectAll();
+          event.preventDefault();
+        }
       });
     }
 
diff --git a/browser/components/urlbar/UrlbarInput.jsm b/browser/components/urlbar/UrlbarInput.jsm
index 4c4207106b38..277c15502ac1 100644
--- a/browser/components/urlbar/UrlbarInput.jsm
+++ b/browser/components/urlbar/UrlbarInput.jsm
@@ -2709,14 +2709,16 @@ class UrlbarInput {
    * Determines if we should select all the text in the Urlbar based on the
    *  Urlbar state, and whether the selection is empty.
    */
-  _maybeSelectAll() {
+  _maybeSelectAll(ignoreClickSelectsAllPref = false) {
     if (
       !this._preventClickSelectsAll &&
+      ignoreClickSelectsAllPref &&
       this._compositionState != UrlbarUtils.COMPOSITION.COMPOSING &&
       this.document.activeElement == this.inputField &&
       this.inputField.selectionStart == this.inputField.selectionEnd
     ) {
-      this.select();
+      //this.select();
+      this.editor.selectAll();
     }
   }
 
@@ -2836,7 +2838,7 @@ class UrlbarInput {
       return;
     }
 
-    this._maybeSelectAll();
+    this._maybeSelectAll(/* ignoreClickSelectsAllPref */ event.button == 2);
   }
 
   _on_focus(event) {
@@ -2871,7 +2873,7 @@ class UrlbarInput {
     if (this.focusedViaMousedown) {
       this.view.autoOpen({ event });
     } else if (this.inputField.hasAttribute("refocused-by-panel")) {
-      this._maybeSelectAll();
+      this._maybeSelectAll(true); // not sure what true here does
     }
 
     this._updateUrlTooltip();
@@ -2929,7 +2931,10 @@ class UrlbarInput {
           this.selectionStart = this.selectionEnd = 0;
         }
 
-        if (event.target.id == SEARCH_BUTTON_ID) {
+        if (event.detail == 2) { // double click selects all
+          this.editor.selectAll();
+          event.preventDefault();
+        } else if (event.target.id == SEARCH_BUTTON_ID) {
           this._preventClickSelectsAll = true;
           this.search(UrlbarTokenizer.RESTRICT.SEARCH);
         } else {
-- 
2.34.1

